{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "databaseAccounts_aoai_api_cosmosdb_name": {
            "defaultValue": "aoai-api-cosmosdb01",
            "type": "String"
        },
        "container_registry_name": {
            "defaultValue": "aoaiapiregistry01",
            "type": "String"
        },
        "serverfarms_appserviceplan_name": {
            "defaultValue": "aoaiapi-plan01",
            "type": "String"
        }, 
        "app_service_deployment_name": {
            "defaultValue": "demo-aoai-api",
            "type": "String"
        },
        "userIpAddress_cosmos": {  
            "type": "String",  
            "metadata": {  
                "description": "The IP address of the user to be allowed access for Cosmos DB."  
            }  
        },
        "userIpAddress_appService": {  
            "type": "String",  
            "metadata": {  
                "description": "The IP address of the user to be allowed access for Azure App Service web app (add /32 to end of IP from previous step)."  
            }  
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2024-05-15",
            "name": "[parameters('databaseAccounts_aoai_api_cosmosdb_name')]",
            "location": "East US 2",
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": ""
            },
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "analyticalStorageConfiguration": {
                    "schemaType": "WellDefined"
                },
                "databaseAccountOfferType": "Standard",
                "defaultIdentity": "FirstPartyIdentity",
                "networkAclBypass": "None",
                "disableLocalAuth": false,
                "enablePartitionMerge": false,
                "enableBurstCapacity": false,
                "minimalTlsVersion": "Tls12",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "East US 2",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [],
                "ipRules": [{"ipAddressOrRange": "[parameters('userIpAddress_cosmos')]"}],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8,
                        "backupStorageRedundancy": "Geo"
                    }
                },
                "networkAclBypassResourceIds": []
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2024-05-15",
            "name": "[concat(parameters('databaseAccounts_aoai_api_cosmosdb_name'), '/AOAI_Cosmos_Metadata')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aoai_api_cosmosdb_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "AOAI_Cosmos_Metadata"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2024-05-15",
            "name": "[concat(parameters('databaseAccounts_aoai_api_cosmosdb_name'), '/00000000-0000-0000-0000-000000000001')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aoai_api_cosmosdb_name'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Reader",
                "type": "BuiltInRole",
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aoai_api_cosmosdb_name'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2024-05-15",
            "name": "[concat(parameters('databaseAccounts_aoai_api_cosmosdb_name'), '/00000000-0000-0000-0000-000000000002')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aoai_api_cosmosdb_name'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Contributor",
                "type": "BuiltInRole",
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aoai_api_cosmosdb_name'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2024-05-15",
            "name": "[concat(parameters('databaseAccounts_aoai_api_cosmosdb_name'), '/AOAI_Cosmos_Metadata/Metadata')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_aoai_api_cosmosdb_name'), 'AOAI_Cosmos_Metadata')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aoai_api_cosmosdb_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "Metadata",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/Project"
                        ],
                        "kind": "Hash",
                        "version": 2
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    }
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
            "apiVersion": "2024-05-15",
            "name": "[concat(parameters('databaseAccounts_aoai_api_cosmosdb_name'), '/AOAI_Cosmos_Metadata/Metadata/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', parameters('databaseAccounts_aoai_api_cosmosdb_name'), 'AOAI_Cosmos_Metadata', 'Metadata')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_aoai_api_cosmosdb_name'), 'AOAI_Cosmos_Metadata')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_aoai_api_cosmosdb_name'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 400
                }
            }
        }, 
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2023-11-01-preview",
            "name": "[parameters('container_registry_name')]",
            "location": "eastus2",
            "sku": {
                "name": "Standard",
                "tier": "Standard"
            },
            "properties": {
                "adminUserEnabled": false,
                "policies": {
                    "quarantinePolicy": {
                        "status": "disabled"
                    },
                    "trustPolicy": {
                        "type": "Notary",
                        "status": "disabled"
                    },
                    "retentionPolicy": {
                        "days": 7,
                        "status": "disabled"
                    },
                    "exportPolicy": {
                        "status": "enabled"
                    },
                    "azureADAuthenticationAsArmPolicy": {
                        "status": "enabled"
                    },
                    "softDeletePolicy": {
                        "retentionDays": 7,
                        "status": "disabled"
                    }
                },
                "encryption": {
                    "status": "disabled"
                },
                "dataEndpointEnabled": false,
                "publicNetworkAccess": "Enabled",
                "networkRuleBypassOptions": "AzureServices",
                "zoneRedundancy": "Disabled",
                "anonymousPullEnabled": false,
                "metadataSearch": "Disabled"
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
            "apiVersion": "2023-11-01-preview",
            "name": "[concat(parameters('container_registry_name'), '/_repositories_admin')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('container_registry_name'))]"
            ],
            "properties": {
                "description": "Can perform all read, write and delete operations on the registry",
                "actions": [
                    "repositories/*/metadata/read",
                    "repositories/*/metadata/write",
                    "repositories/*/content/read",
                    "repositories/*/content/write",
                    "repositories/*/content/delete"
                ]
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
            "apiVersion": "2023-11-01-preview",
            "name": "[concat(parameters('container_registry_name'), '/_repositories_pull')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('container_registry_name'))]"
            ],
            "properties": {
                "description": "Can pull any repository of the registry",
                "actions": [
                    "repositories/*/content/read"
                ]
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
            "apiVersion": "2023-11-01-preview",
            "name": "[concat(parameters('container_registry_name'), '/_repositories_pull_metadata_read')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('container_registry_name'))]"
            ],
            "properties": {
                "description": "Can perform all read operations on the registry",
                "actions": [
                    "repositories/*/content/read",
                    "repositories/*/metadata/read"
                ]
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
            "apiVersion": "2023-11-01-preview",
            "name": "[concat(parameters('container_registry_name'), '/_repositories_push')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('container_registry_name'))]"
            ],
            "properties": {
                "description": "Can push to any repository of the registry",
                "actions": [
                    "repositories/*/content/read",
                    "repositories/*/content/write"
                ]
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
            "apiVersion": "2023-11-01-preview",
            "name": "[concat(parameters('container_registry_name'), '/_repositories_push_metadata_write')]",
            "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', parameters('container_registry_name'))]"
            ],
            "properties": {
                "description": "Can perform all read and write operations on the registry",
                "actions": [
                    "repositories/*/metadata/read",
                    "repositories/*/metadata/write",
                    "repositories/*/content/read",
                    "repositories/*/content/write"
                ]
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2023-12-01",
            "name": "[parameters('serverfarms_appserviceplan_name')]",
            "location": "East US 2",
            "sku": {
                "name": "B1",
                "tier": "Basic",
                "size": "B1",
                "family": "B",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "freeOfferExpirationTime": "2024-10-17T17:12:06.8333333",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {  
            "type": "Microsoft.Web/sites",  
            "apiVersion": "2023-12-01",  
            "name": "[parameters('app_service_deployment_name')]",  
            "location": "East US 2",  
            "kind": "app,linux,container",  
            "dependsOn": [  
              "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_appserviceplan_name'))]"  
            ],  
            "properties": {  
              "enabled": true,  
              "hostNameSslStates": [  
                {  
                  "name": "[concat(parameters('app_service_deployment_name'), '.azurewebsites.net')]",  
                  "sslState": "Disabled",  
                  "hostType": "Standard"  
                },  
                {  
                  "name": "[concat(parameters('app_service_deployment_name'), '.scm.azurewebsites.net')]",  
                  "sslState": "Disabled",  
                  "hostType": "Repository"  
                }  
              ],  
              "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_appserviceplan_name'))]",  
              "reserved": true,  
              "isXenon": false,  
              "hyperV": false,  
              "dnsConfiguration": {},  
              "vnetRouteAllEnabled": false,  
              "vnetImagePullEnabled": false,  
              "vnetContentShareEnabled": false,  
              "siteConfig": {  
                "numberOfWorkers": 1,  
                "linuxFxVersion": "DOCKER|mcr.microsoft.com/appsvc/staticsite:latest",  
                "acrUseManagedIdentityCreds": false,  
                "alwaysOn": false,  
                "http20Enabled": false,  
                "functionAppScaleLimit": 0,  
                "minimumElasticInstanceCount": 0  
              },  
              "scmSiteAlsoStopped": false,  
              "clientAffinityEnabled": false,  
              "clientCertEnabled": false,  
              "clientCertMode": "Required",  
              "hostNamesDisabled": false,  
              "vnetBackupRestoreEnabled": false,  
              "customDomainVerificationId": "E6081F64D09804D1223EA50704227D01F6709E29288FB7426F7286E233241971",  
              "containerSize": 0,  
              "dailyMemoryTimeQuota": 0,  
              "httpsOnly": true,  
              "redundancyMode": "None",  
              "publicNetworkAccess": "Enabled",  
              "storageAccountRequired": false,  
              "keyVaultReferenceIdentity": "SystemAssigned"  
            }  
          },  
          {  
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",  
            "apiVersion": "2023-12-01",  
            "name": "[concat(parameters('app_service_deployment_name'), '/ftp')]",  
            "location": "East US 2",  
            "dependsOn": [  
              "[resourceId('Microsoft.Web/sites', parameters('app_service_deployment_name'))]"  
            ],  
            "properties": {  
              "allow": false  
            }  
          },  
          {  
            "type": "Microsoft.Web/sites/config",  
            "apiVersion": "2023-12-01",  
            "name": "[concat(parameters('app_service_deployment_name'), '/web')]",  
            "location": "East US 2",  
            "dependsOn": [  
              "[resourceId('Microsoft.Web/sites', parameters('app_service_deployment_name'))]"  
            ],  
            "properties": {  
              "numberOfWorkers": 1,  
              "defaultDocuments": [  
                "Default.htm",  
                "Default.html",  
                "Default.asp",  
                "index.htm",  
                "index.html",  
                "iisstart.htm",  
                "default.aspx",  
                "index.php",  
                "hostingstart.html"  
              ],  
              "netFrameworkVersion": "v4.0",  
              "linuxFxVersion": "DOCKER|mcr.microsoft.com/appsvc/staticsite:latest",  
              "requestTracingEnabled": false,  
              "remoteDebuggingEnabled": false,  
              "httpLoggingEnabled": false,  
              "acrUseManagedIdentityCreds": false,  
              "logsDirectorySizeLimit": 35,  
              "detailedErrorLoggingEnabled": false,  
              "publishingUsername": "REDACTED",  
              "scmType": "None",  
              "use32BitWorkerProcess": true,  
              "webSocketsEnabled": false,  
              "alwaysOn": false,  
              "managedPipelineMode": "Integrated",  
              "virtualApplications": [  
                {  
                  "virtualPath": "/",  
                  "physicalPath": "site\\wwwroot",  
                  "preloadEnabled": false  
                }  
              ],  
              "loadBalancing": "LeastRequests",  
              "experiments": {  
                "rampUpRules": []  
              },  
              "autoHealEnabled": false,  
              "vnetRouteAllEnabled": false,  
              "vnetPrivatePortsCount": 0,  
              "publicNetworkAccess": "Enabled",  
              "localMySqlEnabled": false,  
              "ipSecurityRestrictions": [
                {  
                    "ipAddress": "[parameters('userIpAddress_appService')]",  
                    "action": "Allow",  
                    "priority": 100,  
                    "name": "Allow specific IP",  
                    "description": "Allow access from specified IP"  
                } 
              ],  
              "scmIpSecurityRestrictions": [  
                {  
                    "ipAddress": "[parameters('userIpAddress_appService')]",  
                    "action": "Allow",  
                    "priority": 100,  
                    "name": "Allow specific IP",  
                    "description": "Allow access from specified IP"  
                } 
              ],  
              "scmIpSecurityRestrictionsUseMain": false,  
              "http20Enabled": false,  
              "minTlsVersion": "1.2",  
              "scmMinTlsVersion": "1.2",  
              "ftpsState": "FtpsOnly",  
              "preWarmedInstanceCount": 0,  
              "elasticWebAppScaleLimit": 0,  
              "functionsRuntimeScaleMonitoringEnabled": false,  
              "minimumElasticInstanceCount": 0,  
              "azureStorageAccounts": {}  
            }  
          },  
          {  
            "type": "Microsoft.Web/sites/hostNameBindings",  
            "apiVersion": "2023-12-01",  
            "name": "[concat(parameters('app_service_deployment_name'), '/', parameters('app_service_deployment_name'), '.azurewebsites.net')]",  
            "location": "East US 2",  
            "dependsOn": [  
              "[resourceId('Microsoft.Web/sites', parameters('app_service_deployment_name'))]"  
            ],  
            "properties": {  
              "siteName": "[parameters('app_service_deployment_name')]",  
              "hostNameType": "Verified"  
            }  
          }  
    ]}