{  
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",  
  "contentVersion": "1.0.0.0",  
  "parameters": {  
    "flexibleServers_aoai-api-mysql_name": {  
      "defaultValue": "aoai-api-mysql-flexserver",  
      "type": "String"  
    },  
    "administratorLogin": {  
      "type": "string",  
      "metadata": {  
        "description": "The administrator login for the MySQL server."  
      }  
    },  
    "administratorLoginPassword": {  
      "type": "securestring",  
      "metadata": {  
        "description": "The password for the MySQL administrator login."  
      }  
    },  
    "allowedIPAddress_mySQL": {  
      "type": "string",  
      "metadata": {  
        "description": "The IP address to allow through the MySQL server firewall."  
      }  
    }, 
    "allowedIPAddress_appService": {  
      "type": "string",  
      "metadata": {  
        "description": "The IP address to allow through the firewall (add /32 to end of IP from previous step)."  
      }  
    },
    "container_registry_name": {
        "defaultValue": "aoaiapiregistry02",
        "type": "String"
    },
    "serverfarms_appserviceplan_name": {
        "defaultValue": "aoaiapi-plan02",
        "type": "String"
    },
    "app_service_deployment_name": {  
        "defaultValue": "demo-aoai-api02",  
        "type": "String"  
      }
  },  
  "resources": [  
    {  
      "type": "Microsoft.DBforMySQL/flexibleServers",  
      "apiVersion": "2024-02-01-preview",  
      "name": "[parameters('flexibleServers_aoai-api-mysql_name')]",  
      "location": "East US 2",  
      "sku": {  
        "name": "Standard_B1ms",  
        "tier": "Burstable"  
      },  
      "properties": {  
        "administratorLogin": "[parameters('administratorLogin')]",  
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",  
        "storage": {  
          "storageSizeGB": 20,  
          "iops": 360,  
          "autoGrow": "Enabled",  
          "autoIoScaling": "Enabled",  
          "logOnDisk": "Disabled",  
          "storageRedundancy": "LocalRedundancy"  
        },  
        "version": "8.0.21",  
        "availabilityZone": "2",  
        "network": {  
          "publicNetworkAccess": "Enabled"  
        },  
        "backup": {  
          "backupRetentionDays": 7,  
          "geoRedundantBackup": "Disabled"  
        },  
        "highAvailability": {  
          "mode": "Disabled"  
        }  
      }  
    },  
    {  
      "type": "Microsoft.DBforMySQL/flexibleServers/databases",  
      "apiVersion": "2023-12-30",  
      "name": "[concat(parameters('flexibleServers_aoai-api-mysql_name'), '/sys')]",  
      "dependsOn": [  
        "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('flexibleServers_aoai-api-mysql_name'))]"  
      ],  
      "properties": {  
        "charset": "utf8mb4",  
        "collation": "utf8mb4_0900_ai_ci"  
      }  
    },  
    {  
      "type": "Microsoft.DBforMySQL/flexibleServers/firewallRules",  
      "apiVersion": "2023-12-30",  
      "name": "[concat(parameters('flexibleServers_aoai-api-mysql_name'), '/AllowIPAddress')]",  
      "dependsOn": [  
        "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('flexibleServers_aoai-api-mysql_name'))]"  
      ],  
      "properties": {  
        "startIpAddress": "[parameters('allowedIPAddress_mySQL')]",  
        "endIpAddress": "[parameters('allowedIPAddress_mySQL')]"  
      }  
    }, 
    {
        "type": "Microsoft.ContainerRegistry/registries",
        "apiVersion": "2023-11-01-preview",
        "name": "[parameters('container_registry_name')]",
        "location": "eastus2",
        "sku": {
            "name": "Standard",
            "tier": "Standard"
        },
        "properties": {
            "adminUserEnabled": false,
            "policies": {
                "quarantinePolicy": {
                    "status": "disabled"
                },
                "trustPolicy": {
                    "type": "Notary",
                    "status": "disabled"
                },
                "retentionPolicy": {
                    "days": 7,
                    "status": "disabled"
                },
                "exportPolicy": {
                    "status": "enabled"
                },
                "azureADAuthenticationAsArmPolicy": {
                    "status": "enabled"
                },
                "softDeletePolicy": {
                    "retentionDays": 7,
                    "status": "disabled"
                }
            },
            "encryption": {
                "status": "disabled"
            },
            "dataEndpointEnabled": false,
            "publicNetworkAccess": "Enabled",
            "networkRuleBypassOptions": "AzureServices",
            "zoneRedundancy": "Disabled",
            "anonymousPullEnabled": false,
            "metadataSearch": "Disabled"
        }
    },
    {
        "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
        "apiVersion": "2023-11-01-preview",
        "name": "[concat(parameters('container_registry_name'), '/_repositories_admin')]",
        "dependsOn": [
            "[resourceId('Microsoft.ContainerRegistry/registries', parameters('container_registry_name'))]"
        ],
        "properties": {
            "description": "Can perform all read, write and delete operations on the registry",
            "actions": [
                "repositories/*/metadata/read",
                "repositories/*/metadata/write",
                "repositories/*/content/read",
                "repositories/*/content/write",
                "repositories/*/content/delete"
            ]
        }
    },
    {
        "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
        "apiVersion": "2023-11-01-preview",
        "name": "[concat(parameters('container_registry_name'), '/_repositories_pull')]",
        "dependsOn": [
            "[resourceId('Microsoft.ContainerRegistry/registries', parameters('container_registry_name'))]"
        ],
        "properties": {
            "description": "Can pull any repository of the registry",
            "actions": [
                "repositories/*/content/read"
            ]
        }
    },
    {
        "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
        "apiVersion": "2023-11-01-preview",
        "name": "[concat(parameters('container_registry_name'), '/_repositories_pull_metadata_read')]",
        "dependsOn": [
            "[resourceId('Microsoft.ContainerRegistry/registries', parameters('container_registry_name'))]"
        ],
        "properties": {
            "description": "Can perform all read operations on the registry",
            "actions": [
                "repositories/*/content/read",
                "repositories/*/metadata/read"
            ]
        }
    },
    {
        "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
        "apiVersion": "2023-11-01-preview",
        "name": "[concat(parameters('container_registry_name'), '/_repositories_push')]",
        "dependsOn": [
            "[resourceId('Microsoft.ContainerRegistry/registries', parameters('container_registry_name'))]"
        ],
        "properties": {
            "description": "Can push to any repository of the registry",
            "actions": [
                "repositories/*/content/read",
                "repositories/*/content/write"
            ]
        }
    },
    {
        "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
        "apiVersion": "2023-11-01-preview",
        "name": "[concat(parameters('container_registry_name'), '/_repositories_push_metadata_write')]",
        "dependsOn": [
            "[resourceId('Microsoft.ContainerRegistry/registries', parameters('container_registry_name'))]"
        ],
        "properties": {
            "description": "Can perform all read and write operations on the registry",
            "actions": [
                "repositories/*/metadata/read",
                "repositories/*/metadata/write",
                "repositories/*/content/read",
                "repositories/*/content/write"
            ]
        }
    },
    {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2023-12-01",
        "name": "[parameters('serverfarms_appserviceplan_name')]",
        "location": "East US 2",
        "sku": {
            "name": "B1",
            "tier": "Basic",
            "size": "B1",
            "family": "B",
            "capacity": 1
        },
        "kind": "linux",
        "properties": {
            "perSiteScaling": false,
            "elasticScaleEnabled": false,
            "maximumElasticWorkerCount": 1,
            "isSpot": false,
            "freeOfferExpirationTime": "2024-10-17T17:12:06.8333333",
            "reserved": true,
            "isXenon": false,
            "hyperV": false,
            "targetWorkerCount": 0,
            "targetWorkerSizeId": 0,
            "zoneRedundant": false
        }
    },
    {  
        "type": "Microsoft.Web/sites",  
        "apiVersion": "2023-12-01",  
        "name": "[parameters('app_service_deployment_name')]",  
        "location": "East US 2",  
        "kind": "app,linux,container",  
        "dependsOn": [  
          "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_appserviceplan_name'))]"  
        ],  
        "properties": {  
          "enabled": true,  
          "hostNameSslStates": [  
            {  
              "name": "[concat(parameters('app_service_deployment_name'), '.azurewebsites.net')]",  
              "sslState": "Disabled",  
              "hostType": "Standard"  
            },  
            {  
              "name": "[concat(parameters('app_service_deployment_name'), '.scm.azurewebsites.net')]",  
              "sslState": "Disabled",  
              "hostType": "Repository"  
            }  
          ],  
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_appserviceplan_name'))]",  
          "reserved": true,  
          "isXenon": false,  
          "hyperV": false,  
          "dnsConfiguration": {},  
          "vnetRouteAllEnabled": false,  
          "vnetImagePullEnabled": false,  
          "vnetContentShareEnabled": false,  
          "siteConfig": {  
            "numberOfWorkers": 1,  
            "linuxFxVersion": "DOCKER|mcr.microsoft.com/appsvc/staticsite:latest",  
            "acrUseManagedIdentityCreds": false,  
            "alwaysOn": false,  
            "http20Enabled": false,  
            "functionAppScaleLimit": 0,  
            "minimumElasticInstanceCount": 0  
          },  
          "scmSiteAlsoStopped": false,  
          "clientAffinityEnabled": false,  
          "clientCertEnabled": false,  
          "clientCertMode": "Required",  
          "hostNamesDisabled": false,  
          "vnetBackupRestoreEnabled": false,  
          "customDomainVerificationId": "E6081F64D09804D1223EA50704227D01F6709E29288FB7426F7286E233241971",  
          "containerSize": 0,  
          "dailyMemoryTimeQuota": 0,  
          "httpsOnly": true,  
          "redundancyMode": "None",  
          "publicNetworkAccess": "Enabled",  
          "storageAccountRequired": false,  
          "keyVaultReferenceIdentity": "SystemAssigned"  
        }  
      },  
      {  
        "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",  
        "apiVersion": "2023-12-01",  
        "name": "[concat(parameters('app_service_deployment_name'), '/ftp')]",  
        "location": "East US 2",  
        "dependsOn": [  
          "[resourceId('Microsoft.Web/sites', parameters('app_service_deployment_name'))]"  
        ],  
        "properties": {  
          "allow": false  
        }  
      },  
      {  
        "type": "Microsoft.Web/sites/config",  
        "apiVersion": "2023-12-01",  
        "name": "[concat(parameters('app_service_deployment_name'), '/web')]",  
        "location": "East US 2",  
        "dependsOn": [  
          "[resourceId('Microsoft.Web/sites', parameters('app_service_deployment_name'))]"  
        ],  
        "properties": {  
          "numberOfWorkers": 1,  
          "defaultDocuments": [  
            "Default.htm",  
            "Default.html",  
            "Default.asp",  
            "index.htm",  
            "index.html",  
            "iisstart.htm",  
            "default.aspx",  
            "index.php",  
            "hostingstart.html"  
          ],  
          "netFrameworkVersion": "v4.0",  
          "linuxFxVersion": "DOCKER|mcr.microsoft.com/appsvc/staticsite:latest",  
          "requestTracingEnabled": false,  
          "remoteDebuggingEnabled": false,  
          "httpLoggingEnabled": false,  
          "acrUseManagedIdentityCreds": false,  
          "logsDirectorySizeLimit": 35,  
          "detailedErrorLoggingEnabled": false,  
          "publishingUsername": "REDACTED",  
          "scmType": "None",  
          "use32BitWorkerProcess": true,  
          "webSocketsEnabled": false,  
          "alwaysOn": false,  
          "managedPipelineMode": "Integrated",  
          "virtualApplications": [  
            {  
              "virtualPath": "/",  
              "physicalPath": "site\\wwwroot",  
              "preloadEnabled": false  
            }  
          ],  
          "loadBalancing": "LeastRequests",  
          "experiments": {  
            "rampUpRules": []  
          },  
          "autoHealEnabled": false,  
          "vnetRouteAllEnabled": false,  
          "vnetPrivatePortsCount": 0,  
          "publicNetworkAccess": "Enabled",  
          "localMySqlEnabled": false,  
          "ipSecurityRestrictions": [  
            {  
                  "ipAddress": "[parameters('allowedIPAddress_appService')]",  
                  "action": "Allow",  
                  "priority": 100,  
                  "name": "Allow specific IP",  
                  "description": "Allow access from specified IP"  
              } 
            ],  
            "scmIpSecurityRestrictions": [  
              {  
                  "ipAddress": "[parameters('allowedIPAddress_appService')]",  
                  "action": "Allow",  
                  "priority": 100,  
                  "name": "Allow specific IP",  
                  "description": "Allow access from specified IP"  
            } 
          ],  
          "scmIpSecurityRestrictionsUseMain": false,  
          "http20Enabled": false,  
          "minTlsVersion": "1.2",  
          "scmMinTlsVersion": "1.2",  
          "ftpsState": "FtpsOnly",  
          "preWarmedInstanceCount": 0,  
          "elasticWebAppScaleLimit": 0,  
          "functionsRuntimeScaleMonitoringEnabled": false,  
          "minimumElasticInstanceCount": 0,  
          "azureStorageAccounts": {}  
        }  
      },  
      {  
        "type": "Microsoft.Web/sites/hostNameBindings",  
        "apiVersion": "2023-12-01",  
        "name": "[concat(parameters('app_service_deployment_name'), '/', parameters('app_service_deployment_name'), '.azurewebsites.net')]",  
        "location": "East US 2",  
        "dependsOn": [  
          "[resourceId('Microsoft.Web/sites', parameters('app_service_deployment_name'))]"  
        ],  
        "properties": {  
          "siteName": "[parameters('app_service_deployment_name')]",  
          "hostNameType": "Verified"  
        }  
      }  
  ]  
}  